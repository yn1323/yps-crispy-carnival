name: storybook-vrt

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  check_expected_screenshots:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.base_ref }}
      - name: Setup
        uses: ./.github/actions/setup
      - name: restore cached expected screenshots
        id: screenshots_cache
        uses: ./.github/actions/cache-screenshots
        with:
          lookup-only: 'true'
          cache-name: cache-expected-screenshots-1
      - name: cache storybook build result
        if: ${{ steps.screenshots_cache.outputs.cache-hit != 'true' }}
        id: storybook_result_cache
        uses: ./.github/actions/cache-storybook-build-result
      - name: storybook build
        if: ${{ steps.screenshots_cache.outputs.cache-hit != 'true' && steps.storybook_result_cache.outputs.cache-hit != 'true' }}
        run: pnpm build-storybook -- --quiet --test
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

  take_expected_screenshots:
    needs: check_expected_screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        shardTotal: [2]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.base_ref }}
      - name: Setup
        uses: ./.github/actions/setup
      - name: Setup Playwright
        uses: ./.github/actions/playwright
      - name: restore cached expected screenshots
        id: screenshots_cache
        uses: ./.github/actions/cache-screenshots
        with:
          lookup-only: 'false'
          cache-name: cache-expected-screenshots-${{ matrix.shardIndex }}
      - name: install native dependencies
        if: ${{ steps.screenshots_cache.outputs.cache-hit != 'true' }}
        run: sudo apt-get install fonts-ipafont-gothic
      - name: cache storybook build result
        if: ${{ steps.screenshots_cache.outputs.cache-hit != 'true' }}
        id: storybook_result_cache
        uses: ./.github/actions/cache-storybook-build-result
      - name: take screenshots
        if: ${{ steps.screenshots_cache.outputs.cache-hit != 'true' }}
        run: pnpm dlx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" "pnpm dlx http-server storybook-static --port 6006 --silent" "pnpm dlx wait-on tcp:127.0.0.1:6006 && pnpm storybook:test -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}"
      - name: upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: expected-screenshots-${{ matrix.shardIndex }}
          path: __screenshots__
          retention-days: 10

  check_actual_screenshots:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
      - name: Setup
        uses: ./.github/actions/setup
      - name: cache storybook build result
        id: storybook_result_cache
        uses: ./.github/actions/cache-storybook-build-result
      - name: storybook build
        run: pnpm build-storybook -- --quiet --test
        env:
          NEXT_IS_TEST: 'true'
      - name: Upload Storybook Artifact for GitHub Pages
        uses: actions/upload-artifact@v4
        with:
          name: storybook
          path: storybook-static/
          retention-days: 10

  take_actual_screenshots:
    needs: check_actual_screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        shardTotal: [2]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
      - name: Setup
        uses: ./.github/actions/setup
      - name: Setup Playwright
        uses: ./.github/actions/playwright
      - name: install native dependencies
        run: sudo apt-get install fonts-ipafont-gothic
      - name: cache storybook build result
        id: storybook_result_cache
        uses: ./.github/actions/cache-storybook-build-result
      - name: take screenshots
        run: pnpm dlx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" "pnpm dlx http-server storybook-static --port 6006 --silent" "pnpm dlx wait-on tcp:127.0.0.1:6006 && pnpm storybook:test -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}"
      - name: upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: actual-screenshots-${{ matrix.shardIndex }}
          path: __screenshots__
          retention-days: 10

  run_reg_suit:
    needs:
      - take_expected_screenshots
      - take_actual_screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
      - name: Setup
        uses: ./.github/actions/setup
      - name: restore cached expected screenshots
        id: screenshots_cache
        uses: ./.github/actions/cache-screenshots
        with:
          lookup-only: 'false'
      - name: Create .reg directory
        run: | 
          mkdir -p .reg
          mkdir -p .reg/expected
      - name: download expected screenshots1
        uses: actions/download-artifact@v5
        with:
          name: expected-screenshots-1
          path: .reg/expected
      - name: download expected screenshots2
        uses: actions/download-artifact@v5
        with:
          name: expected-screenshots-2
          path: .reg/expected
      - name: download actual screenshots-1
        uses: actions/download-artifact@v5
        with:
          name: actual-screenshots-1
          path: __screenshots__
      - name: download actual screenshots2
        uses: actions/download-artifact@v5
        with:
          name: actual-screenshots-2
          path: __screenshots__
      - name: run reg-suit
        run: pnpm vrt
      - name: rename report
        run: mv .reg report
      - name: Upload VRT Report Artifact for GitHub Pages
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: report/
          retention-days: 10

  upload-to-github-pages:
    needs: run_reg_suit
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: gh-pages
      - name: Download Storybook Artifact
        uses: actions/download-artifact@v5
        with:
          name: storybook
          path: "./storybook/${{ github.ref_name }}"
      - name: Download VRT Report Artifact
        uses: actions/download-artifact@v5
        with:
          name: report
          path: "./vrt-report/${{ github.ref_name }}"
      - name: Commit and push changes
        shell: bash
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add vrt-report
          git add storybook
          git commit -m "chore: Update content in ${{ github.ref_name }}"
          git push
      - name: Create comments
        uses: mshick/add-pr-comment@v2
        with:
          message-id: storybook
          message: |
            ðŸ¦ˆ Storybook VRT Report ðŸ¦ˆ
            [VRT Report](https://yn1323.github.io/yps-polar/vrt-report/${{ github.ref_name }})
            [Storybook](https://yn1323.github.io/yps-polar/storybook/${{ github.ref_name }})
